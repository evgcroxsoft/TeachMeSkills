# Домашнее задание:
# 1.Создать и заполнить таблицу игроков команды Реал Мадрид в БД: table_real_team
# 2.Создать и заполнить значениями таблицы: citizenship, health, leg, Married, position
# 3.Сделать связь таблицы игроков с другими таблицами через команду FOREIGN KEY.
# 4.Вывести все значения таблицы игроков команды используя команду INNER JOIN присоединив нужные поля.

# Решение:
# Cоздаем таблицу игроков команды, с помощью внутренних объединений мы подтягиваем данные из других таблиц.
# Данный тип называется INNER JOIN. Мы пишем название столбца и ниже FOREIGN KEY используем для подтягивания знач.

CREATE TABLE table_real_team(
    id INTEGER PRIMARY KEY,
    name TEXT NOT NULL,
    surname TEXT NOT NULL,
    born Date NOT NULL,
    height INTEGER NOT NULL,
    weight INTEGER NOT NULL,
    merried_status INTEGER NOT NULL,
    citizenship INTEGER NOT NULL,
    shirt_number INTEGER NOT NULL,
    leg INTEGER NOT NULL,
    health INTEGER NOT NULL,
    position INTEGER NOT NULL,
    FOREIGN KEY (merried_status) REFERENCES table_married(id),
    FOREIGN KEY (leg) REFERENCES table_leg(id),
    FOREIGN KEY (citizenship) REFERENCES table_citizenship(id),
    FOREIGN KEY (health) REFERENCES table_citizenship(id),
    FOREIGN KEY (position) REFERENCES table_citizenship(id)
);

# Добавляем в таблицу игроков
INSERT INTO table_real_team
    (name, surname, born, height, weight, merried_status, citizenship, shirt_number, leg, health, position) 
    VALUES
    ('Sergio', 'Ramos García', '30-03-1986', 184, 82, 1, 6, '4', 1, 2, 1);

INSERT INTO table_real_team
    (name, surname, born, height, weight, merried_status, citizenship, shirt_number, leg, health, position) 
    VALUES
    ('Alfonce', 'Areolya', '25-27-1990', 176, 76, 2, 1, '17', 1, 1, 4);

INSERT INTO table_real_team
    (name, surname, born, height, weight, merried_status, citizenship, shirt_number, leg, health, position) 
    VALUES
    ('Thibaut', 'Courtois', '01-12-1992', 192, 1, 2, 6, '99', 2, 3, 4);


# Обновляем сделаю нами ошибку (25-27-1990) при внесеннии данных в таблице:
UPDATE table_real_team SET born = '25-06-1990' WHERE player_id = 2;

# Данный запрос позволяет нам подгружать и выводить все таблицы, которые мы хотим вывести в запросе:

SELECT 
table_real_team.id, 
real_madrid_club.club_name,
table_real_team.name, 
table_real_team.surname, 
table_real_team.born, 
table_real_team.height,
table_married.status, 
table_citizenship.citizenship,
table_leg.leg,
table_real_team.shirt_number,
table_health.health,
table_position.position
FROM table_real_team
JOIN table_citizenship 
ON table_real_team.citizenship == table_citizenship.id
JOIN table_leg
ON table_real_team.leg == table_leg.id
JOIN table_married
ON table_real_team.merried_status == table_married.id
JOIN table_health
ON table_real_team.health == table_health.id
JOIN table_position
ON table_real_team.position == table_position.id
JOIN real_madrid_club;


# Полезные коды редактирования данных в таблицах:
'''
#Удаляет таблицу!
DROP TABLE real_madrid_club;
# Изменить название таблицы!
ALTER TABLE team RENAME TO table_real_team;
# Добавляем новый столбец в таблицу table_real_team:
ALTER TABLE table_real_team ADD cards;
# DELETE удаление данных из таблицы
DELETE FROM table_real_team WHERE player_id = 2; - удаление

ALTER TABLE table_real_team ADD FOREIGN KEY (club_id) REFERENCES real_madrid_club(id_club_name);
ALTER TABLE books ADD FOREIGN KEY (author_id) REFERENCES authors(author_id)
ALTER TABLE chil ADD CONSTRAINT fk_child_parent FOREIGN KEY (parent_id)  REFERENCES parent(id);
'''

# Сортировка данных в таблице:
# ORDER - дает возможность делать сортировку по, можно также наоборот указав минус перед искоемым полем
SELECT * FROM table_real_team ORDER BY position;
SELECT * FROM table_real_team ORDER BY -age; 

# Команда нам позволяет выбрать все интересующие нас поля которые содержат тар     - Вратарь
SELECT name, surname, born FROM table_real_team WHERE born LIKE "%199%";
SELECT name, surname, shirt_number FROM table_real_team WHERE shirt_number  LIKE "%_7%";