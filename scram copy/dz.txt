Приложение на FastAPI посуточная аренда жилья.

Пользователь заходит на главную страницу и видит там фильтр где может путем фильтрации найти что хочет:
- по дате;
- по стоимости;
- по городу;
- по рейтингу;
- по хосту(названию конкретного арендодателя)

Далее при нажатии кнопки “забронировать”, его приложение попросит залогиниться.
Если ранее регистрации не было, то пользователь должен зарегистрироваться в системе. Собственно, с учетом проверок по емейлу, паролю. Ну и собственно JWT auth.

После регистрации пользователю летит на емейл в виде бекграунд таски, уведомление о успешной регистрации и просьбой подтвердить емейл в виде, нажатия на ссылку.

При регистрации, приложение должно по умолчанию регистрировать пользователя как арендатора собственно и отображать всю в будущем информацию как для арендатора. 

Если пользователь регистрируется как Арендодатель (например, в форме регистрации, он сможет выбрать соответсвующую галочку) тогда у такого пользователя будет возможность в будущем добавлять аппартаменты, получать уведомления о желаемых бронировках, подтверждать их или отклонять, писать комментарий и ставить звезды арендатору после завершения сотрудничества (после того как срок выбранной оренды закончиться)

После успешной бронировки пользователь также получит на почту уведомление что аппартаменты забронированы за текущим пользователем. Также сообщение в виде бек таски.

Можно подумать как организовать сбор данных пользователя и подсчитать количество посещений и время пребывания на сайте. Какие страницы или запросы были просмотрены.

Механизм: 
1. Регистрация Арендодателя и создание аппартаментов.
2. Регистраиция пользователя и фильтрация и выбор аппартаментов.
3. При создании бронировки создается автоматом чат для возможности коммуникации с арендодателем – круто было бы если подключен телеграм, то всю переписку копировать сразу в чатбот, таким образом не привязываясь к личному кабинету, можно писать через телеграм, а он летит на приложение и отображается в системе и также дублируется в телеграме арендодателя.
4. Подтверждение или отклонение Арендодтелем запроса на бронировку.
5. При отказе арендодатель может написать комментарий о причинах отказа.
6. При успешном подтвержденном бронировании, арендатор увидит изминения статуса на подтвержден и получает уведомление на емейл.
7. Звезды и коменты могут написать друг другу арендодетль и арендатор после завершения сделки по бронировке.


Из фишек:
1. Отправка емейлов как бектаска (попробывать подключить MailChimp);
2. Написания чата между пользоватлями и возможность их общения;
3. Если пользователи залогинены то отображать статус пользователя в онлайне он или нет используя websocket. Пользователи могут в режиме онлайн вести переписку например о вопросах связанных с жильем.
4. JWT auth
5. С помощью мультипроцессорности настроить и запустить автоновное поднятие, docker redis, celery и flower. К примеру.
6. REST запросы через доку или если будет возможность прикрутить еще и HTML например bootstrap для возможности также визуального отображения.
7. Использование статусов через Enum.
8. Запуск приложение с помощью файла конфига
9. Креды беруться из environmental.
10. Использовать qurey параметры в роутах, для передачи запросов при поиске и фильтрации нового жилья арендатора.
11. Можно подключить телеграмм бот. Через который можно выполнить залогиниться и выполнить запросы о поиске жилья и бронировку.

Сущности:
Арендатор
Арендодатель
Аппартаменты
Коменты